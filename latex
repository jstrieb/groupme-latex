#!/usr/bin/python3

import os
import json


##################################################
# Helper Functions
##################################################

def send(msg, image_path=None):
    """Send message from the bot to the group chat. Limit the size of the sent
    message text to 990 characters based on GroupMe's character limit.

    If an image path is included, upload it to GroupMe and attach the proper
    image URL to the message that is sent.
    """
    pass # TODO


##################################################
# Main Function
##################################################

def process_message(data):
    """Check whether the message data contains an equation based on whether the
    text starts and ends with at least one dollar sign. If it does, attempt to
    render it as LaTeX locally. Then, attempt to convert to PNG from PDF.
    Finally, send it back to the user in the group chat.
    """
    pass # TODO


def main(data):
    # Don't allow bots to respond to each other
    if data.get("sender_type", "") == "bot": return

    try:
        process_message(data)
    except Exception as e:
        # Catch exceptions and send them if they occur -- makes debugging
        # considerably easier
        send(f"Exception\n{str(e)}")


if __name__ == "__main__":
    # NOTE: Uncomment the line below before printing HTML output
    # print("Content-type: text/html\n\n")

    # Try to get cgi-bin input data, then process it
    try:
        # Try to get GET data if possible, otherwise get POST data
        if os.getenv("QUERY_STRING"):
            data = os.getenv("QUERY_STRING")
        else:
            data = sys.stdin.read()

        # Try to parse the input as JSON. If it works, process it
        try:
            data = json.loads(data)
            main(data)
        except Exception as e: pass
    except Exception as e: pass
